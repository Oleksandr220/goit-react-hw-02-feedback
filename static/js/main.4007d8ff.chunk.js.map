{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedBackOptions/FeedBackOptions.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","feedbackPercentage","className","Section","title","children","defaultProps","feedbackComponents","options","changeFeedback","map","option","onClick","toString","App","state","feedBack","Object","keys","forEach","el","toLowerCase","setState","prevState","countTotalFeedback","countFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VA0BeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAU,mBAAf,UACE,oBAAGA,UAAU,wBAAb,oBAA6CL,KAC7C,oBAAGK,UAAU,wBAAb,uBAAgDJ,KAChD,oBAAGI,UAAU,wBAAb,mBAA4CH,KAC5C,oBAAGG,UAAU,wBAAb,qBAA8CF,KAC9C,oBAAGE,UAAU,wBAAb,iCACuBD,SCRvBE,G,MAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,yBAASH,UAAU,UAAnB,SACE,gCACE,oBAAIA,UAAU,iBAAd,SAAgCE,IAC/BC,SAMTF,EAAQG,aAAe,CACrBF,MAAO,KAQMD,QCCAI,G,MArBY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eACrC,OACE,qBAAKP,UAAU,oBAAf,SACGM,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACET,UAAU,mBACVU,QAAS,kBAAMH,EAAeE,IAFhC,SAKGA,GAFIA,EAAOE,mBCqDPC,G,kNAzDbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,eAAiB,SAAAO,GACIC,OAAOC,KAAK,EAAKH,OACzBI,SAAQ,SAAAC,GACbA,IAAOJ,EAASK,eAClB,EAAKC,UAAS,SAAAC,GAAS,sBACpBH,EAAKG,EAAUH,GAAM,U,EAO9BI,mBAAqB,WACnB,OAAO,EAAKT,MAAMlB,KAAO,EAAKkB,MAAMjB,QAAU,EAAKiB,MAAMhB,K,EAG3D0B,wBAA0B,WACxB,OAAOC,KAAKC,KAAwB,IAAlB,EAAKZ,MAAMlB,KAAc,EAAK2B,uB,EAGlDhB,QAAU,CAAC,OAAQ,UAAW,O,4CAE9B,WACE,MAA+BoB,KAAKb,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKG,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,uBACA,cAAC,EAAD,CAASE,MAAM,wBAAf,SACE,cAAC,EAAD,CACEI,QAASoB,KAAKpB,QACdC,eAAgBmB,KAAKnB,mBAGzB,cAAC,EAAD,CAASL,MAAM,aAAf,SACGwB,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,qBACZvB,mBAAoB2B,KAAKH,4BAG3B,2D,GAlDMI,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4007d8ff.chunk.js","sourcesContent":["import React from 'module';\nimport PropTypes from 'prop-types';\nimport './Statistics.css';\n\nconst Statistics = ({ good, neutral, bad, total, feedbackPercentage }) => {\n  return (\n    <div className=\"statistics__list\">\n      <p className=\"statistics__list-item\">Good : {good}</p>\n      <p className=\"statistics__list-item\">Neutral : {neutral}</p>\n      <p className=\"statistics__list-item\">Bad : {bad}</p>\n      <p className=\"statistics__list-item\">Total : {total}</p>\n      <p className=\"statistics__list-item\">\n        Positive feedback : {feedbackPercentage}\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      <div>\n        <h2 className=\"section__title\">{title}</h2>\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: ' ',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FeedBackOptions.css';\n\nconst feedbackComponents = ({ options, changeFeedback }) => {\n  return (\n    <div className=\"button__container\">\n      {options.map(option => (\n        <button\n          className=\"feedback__button\"\n          onClick={() => changeFeedback(option)}\n          key={option.toString()}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nfeedbackComponents.propTypes = {\n  changeFeedback: PropTypes.func,\n  options: PropTypes.node,\n};\n\nexport default feedbackComponents;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport FeedbackComponents from './components/FeedBackOptions/FeedBackOptions';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeFeedback = feedBack => {\n    const arrayState = Object.keys(this.state);\n    arrayState.forEach(el => {\n      if (el === feedBack.toLowerCase()) {\n        this.setState(prevState => ({\n          [el]: prevState[el] + 1,\n        }));\n        return;\n      }\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countFeedbackPercentage = () => {\n    return Math.ceil((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  options = ['Good', 'Neutral', 'Bad'];\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"feedback__container\">\n        <h1 className=\"feedback__title\">Feedbacks</h1>\n        <Section title=\"Please leave feedback\">\n          <FeedbackComponents\n            options={this.options}\n            changeFeedback={this.changeFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              feedbackPercentage={this.countFeedbackPercentage()}\n            />\n          ) : (\n            <p>No feedback given</p>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}